apiVersion: v1
kind: ConfigMap
metadata:
  name: pesbuk-env-config
  namespace: staging
data:
  config.php: |
        <?php
        $db_host = "xxx";
        $db_user = "xxx";
        $db_pass = "xxx";
        $db_name = "xxx";
        try {
        //create PDO connection
        $db = new PDO("mysql:host=$db_host;dbname=$db_name", $db_user, $db_pass);
        } catch(PDOException $e) {
        //show error
        die("Terjadi masalah: " . $e->getMessage());
        }

---

apiVersion: v1
kind: Secret
metadata:
  name: p-secret-fb
  namespace: staging
type: Opaque
data:
  DB_USER: xxx
  DB_PASS: xxx
  DB_HOST: xxx
  DB_NAME: xxx

---

apiVersion: v1
kind: Secret
metadata:
  name: pesbuk-env-secret
  namespace: staging
stringData:
  VERSION: 1.0.0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pesbuk-web
  namespace: staging
  labels:
    name: pesbuk-web
spec:
  replicas: 3
  selector:
    matchLabels:
      name: pesbuk-web
  template:
    metadata:
      name: pesbuk-web
      labels:
        name: pesbuk-web
    spec:
      containers:
        - name: pesbuk-web
          image: indragiri21/pesbuk:2.0
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: pesbuk-env-secret
          volumeMounts:
          - name: pesbuk-env-config
            mountPath: "/var/www/html/config"
      volumes:
      - configMap:
            name: pesbuk-env-config
        name: pesbuk-env-config

---

apiVersion: v1
kind: Service
metadata:
  name: pesbuk-env-service
  namespace: staging
spec:
  selector:
    name: pesbuk-web
  ports:
    - port: 8080
      targetPort: 8080

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: pesbuk-ingress
  namespace: staging
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: pesbuk-staging.yogitechlab.my.id
    http:
      paths:
      #- path: /
      - backend:
          serviceName: pesbuk-env-service
          servicePort: 8080
